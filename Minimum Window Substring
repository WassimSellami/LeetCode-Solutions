class Solution {
public:
    string minWindow(string str, string pattern) {
        string res="";
        if(pattern.length() > str.length()){
            return "";
        }
        const int N = 130;
        int h_pat[N] = {0};
        int h_str[N] = {0};
        for(char c: pattern){
            ++h_pat[c];
        }
        int count = 0;
        int start = 0;
        int minLen = INT_MAX;
        for(int i=0; i<str.length(); ++i){
            ++h_str[str[i]];
            if(h_pat[str[i]] >= h_str[str[i]]){
                ++count; 
            }
            if(count == pattern.length()){
                while(h_str[str[start]] > h_pat[str[start]]
                || h_pat[str[start]] == 0){
                    if(h_str[str[start]] > h_pat[str[start]]){
                        --h_str[str[start]];
                    }
                    ++start;
                }
                if(i-start+1 < minLen){
                    minLen = i-start+1;
                    res = str.substr(start, minLen);
                }
            }
        }
        return res;
        
    }
};
